<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsl">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>edu.rpi.tw.mobilehealth</groupId>
    <artifactId>mobilehealth-parent</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <artifactId>salus-webapp</artifactId>

  <packaging>war</packaging>
  <name>semanteco Salus webapp</name>

  <repositories>
    <repository>
      <id>tetherless</id>
      <url>http://orion.tw.rpi.edu/artifactory/libs-release/</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>sonatype-snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases><enabled>false</enabled></releases>
      <snapshots><enabled>true</enabled></snapshots>
    </pluginRepository>
  </pluginRepositories>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <tomcat.version>7.0.29</tomcat.version>
    <tomcat.port>8080</tomcat.port>
    <tomcat.url>http://localhost:${tomcat.port}/manager/text</tomcat.url>
    <triple-store>http://mobilehealth.tw.rpi.edu/sparql</triple-store>
    <!-- specify artifact for default module here -->
    <!-- you will also need to enable the use-default-module profile at the end of the pom -->
    <module.default>salus-patient-facet</module.default>
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
  </properties>

  <dependencies>
    <!-- place modules here using the following form -->
    <!--
    <dependency>
      <groupId>edu.rpi.tw.escience</groupId>
      <artifactId>semanteco-sample-facet</artifactId>
      <version>4.2-SNAPSHOT</version>
      <classifier>module</classifier>
      <scope>provided</scope>
    </dependency>
    -->
    <dependency>
      <groupId>edu.rpi.tw.mobilehealth</groupId>
      <artifactId>salus-patient-facet</artifactId>
      <version>1.0-SNAPSHOT</version>
      <classifier>module</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>edu.rpi.tw.mobilehealth</groupId>
      <artifactId>salus-characteristic-facet</artifactId>
      <version>1.0-SNAPSHOT</version>
      <classifier>module</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>edu.rpi.tw.escience</groupId>
      <artifactId>semanteco-domain</artifactId>
      <version>4.2-SNAPSHOT</version>
      <classifier>module</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>edu.rpi.tw.escience</groupId>
      <artifactId>semanteco-data-source</artifactId>
      <version>4.2-SNAPSHOT</version>
      <classifier>module</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>edu.rpi.tw.escience</groupId>
      <artifactId>semanteco-regulation</artifactId>
      <version>4.2-SNAPSHOT</version>
      <classifier>module</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>edu.rpi.tw.escience</groupId>
      <artifactId>semanteco-data-type</artifactId>
      <version>4.2-SNAPSHOT</version>
      <classifier>module</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>edu.rpi.tw.escience</groupId>
      <artifactId>semanteco-debugger</artifactId>
      <version>4.2-SNAPSHOT</version>
      <classifier>module</classifier>
      <scope>provided</scope>
    </dependency>

    <!-- required dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>edu.rpi.tw.escience</groupId>
      <artifactId>semanteco-servlet-base</artifactId>
    </dependency>
    <dependency>
      <groupId>edu.rpi.tw.escience</groupId>
      <artifactId>semanteco-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-catalina</artifactId>
      <version>${tomcat.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-coyote</artifactId>
      <version>${tomcat.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.sonar-plugins.java</groupId>
      <artifactId>sonar-jacoco-listeners</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
<!--
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.6.4-SNAPSHOT</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <phase>initialize</phase>
          </execution>
          <execution>
            <id>instrument</id>
            <goals>
              <goal>instrument</goal>
            </goals>
            <phase>process-classes</phase>
          </execution>
          <execution>
            <id>restore-instrumented-classes</id>
            <goals>
              <goal>restore-instrumented-classes</goal>
            </goals>
            <phase>prepare-package</phase>
          </execution>
        </executions>
      </plugin>
-->
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-compiler-plugin</artifactId>
	<version>2.5.1</version>
	<configuration>
	  <source>1.6</source>
	  <target>1.6</target>
	</configuration>
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-war-plugin</artifactId>
	<version>2.2</version>
      </plugin>
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>2.0</version>
	<configuration>
	  <update>true</update>
	  <url>${tomcat.url}</url>
	  <server>tomcat</server>
	  <path>/Salus</path>
	</configuration>
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-dependency-plugin</artifactId>
	<version>2.5.1</version>
	<executions>
          <execution>
            <id>configure-base</id>
            <phase>process-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <includeArtifactIds>semanteco-servlet-base</includeArtifactIds>
              <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}</outputDirectory>
              <includes>WEB-INF\/*.tld,js\/**\/*,css\/**\/*,images\/**\/*</includes>
            </configuration>
          </execution>
	  <execution>
            <id>copy-modules</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <excludeGroupIds>javax.servlet,javax.servlet.jsp,org.apache.tomcat</excludeGroupIds>
              <excludeTransitive>true</excludeTransitive>
              <includeClassifier>module</includeClassifier>
              <includeScope>provided</includeScope>
              <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}/WEB-INF/modules</outputDirectory>
            </configuration>
	  </execution>
          <execution>
            <id>copy-module-deps</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <excludeGroupIds>javax.servlet,javax.servlet.jsp,org.apache.tomcat</excludeGroupIds>
              <excludeArtifactIds>semanteco-test</excludeArtifactIds>
              <excludeClassifiers>module</excludeClassifiers>
              <includeScope>provided</includeScope>
              <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}/WEB-INF/lib</outputDirectory>
            </configuration>
          </execution>
	</executions>
      </plugin>
      <plugin>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>properties-maven-plugin</artifactId>
	<version>1.0-alpha-2</version>
	<executions>
	  <execution>
	    <phase>generate-resources</phase>
	    <goals>
	      <goal>write-project-properties</goal>
	    </goals>
	    <configuration>
	      <outputFile>${project.build.outputDirectory}/semanteco.properties</outputFile>
	    </configuration>
	  </execution>
	</executions>
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-surefire-plugin</artifactId>
	<version>2.12</version>
	<configuration>
          <properties>
            <property>
              <name>listener</name>
              <value>org.sonar.java.jacoco.JUnitListener</value>
            </property>
          </properties>
	</configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
    	<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
    	<plugin>
    	  <groupId>org.eclipse.m2e</groupId>
    	  <artifactId>lifecycle-mapping</artifactId>
    	  <version>1.0.0</version>
    	  <configuration>
    	    <lifecycleMappingMetadata>
    	      <pluginExecutions>
    		<pluginExecution>
    		  <pluginExecutionFilter>
    		    <groupId>org.codehaus.mojo</groupId>
    		    <artifactId>
    		      properties-maven-plugin
    		    </artifactId>
    		    <versionRange>
    		      [1.0-alpha-2,)
    		    </versionRange>
    		    <goals>
    		      <goal>
    			write-project-properties
    		      </goal>
    		    </goals>
    		  </pluginExecutionFilter>
    		  <action>
    		    <ignore></ignore>
    		  </action>
    		</pluginExecution>
    		<pluginExecution>
    		  <pluginExecutionFilter>
    		    <groupId>org.apache.maven.plugins</groupId>
    		    <artifactId>
    		      maven-dependency-plugin
    		    </artifactId>
    		    <versionRange>
    		      [2.5.1,)
    		    </versionRange>
    		    <goals>
    		      <goal>
    			unpack-dependencies
    		      </goal>
                      <goal>
                        copy-dependencies
                      </goal>
    		    </goals>
    		  </pluginExecutionFilter>
    		  <action>
    		    <ignore></ignore>
    		  </action>
    		</pluginExecution>
    	      </pluginExecutions>
    	    </lifecycleMappingMetadata>
    	  </configuration>
    	</plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <profile>
      <id>use-default-module</id>
      <activation>
        <!-- switch this to true to activate default module on every build -->
        <property>
          <name>!ignoreDefaultModule</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>2.5.1</version>
            <executions>
              <execution>
                <id>unpack-default-module</id>
                <phase>generate-resources</phase>
                <goals>
                  <goal>unpack-dependencies</goal>
                </goals>
                <configuration>
                  <includeArtifactIds>${module.default}</includeArtifactIds>
                  <outputDirectory>${project.build.directory}/default-module/resources</outputDirectory>
                  <includes>META-INF\/res\/**\/*</includes>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.6</version>
            <executions>
              <execution>
                <id>copy-default-module-assets</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}</outputDirectory>
                  <resources>
                    <resource>
                      <directory>${project.build.directory}/default-module/resources/META-INF/res</directory>
                      <filtering>false</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.2</version>
            <configuration>
              <warSourceExcludes>index.jsp</warSourceExcludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>deploy</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
            <version>2.0</version>
            <executions>
              <execution>
                <id>deploy</id>
                <phase>install</phase>
                <goals>
                  <goal>deploy</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
